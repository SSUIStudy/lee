


/// postion 줄때 사용 할 속성만 가져오는 방식. 
/// @group common
/// @author 채영
/// @param {string} $position - position 값(apsolute...)
/// @param {number} $top [null] - 위
/// @param {number} $right [null] - 오른쪽
/// @param {number} $bottom [null] - 아래
/// @param {number} $left [null] - 왼쪽
/// @example scss - position `.box`
///   .box {
///      @include position(absolute, $top: 0, $left: 0);
///   }
@mixin position($position, $top: null, $right: null, $bottom: null, $left: null) {
    position: $position;
    top: $top;
    right: $right;
    bottom: $bottom;
    left: $left;
  }

/// size (width,height) 지정
/// @group common
/// @author 채영
/// @example  @include size(450px,40px)
@mixin size($width, $height:null) {
    width: $width;
    height: $height;
  }
  

/// 백그라운드 파일명,경로,포지션 설정
/// 이미지 형식을 설정할 경우 + '.jpg' 식으로 붙여주면 된다
/// 
/// @group form
/// @author 채영
/// @param {string} $filename - 파일이름
/// @param {string} $base-dire - 경로
/// @param {string} $position - 위치

@mixin background-image($filename, $base-dir: '/images/',$position:0 0) {
    background-image: url($base-dir + $filename);
    background-position:$position;
    background-repeat: no-repeat;
}


/// input 애니메이션 효과
/// 
/// @group form
/// @author 채영
/// @param {string} $inputAni - bottom:밑줄보더,all:전체보더,bg:백그라운드,bd:focus시,hv:호버시

@mixin inputdirec($inputAni) { 
    @if $inputAni == 'bottom'{
        ~ .ani{
            position: absolute;
            left: 0;
            right: 0;
            bottom: 0;
            width: 0;
            height: 1px;
            background-color:$inputpcolor;
            transition: .2s;
            -webkit-transition: .2s;
        }
        &:focus ~ .ani{
            width: 100%;
        }
    }
    @else if $inputAni == 'all' {
        transition: .4s;
        -webkit-transition: .4s;
        ~ .ani{
            position: absolute;
            left: 0;
            bottom: 0;
            width: 0;
            height: 40px;
            transition: .4s;
            -webkit-transition: .4s;
        }
        &:focus{
            transition: .4s;
            -webkit-transition: .4s; 
            ~.ani{
                width: 100%;
                border: 1px solid #000;
                transition: .4s;
                -webkit-transition: .4s;
            }
        }
    }
    @else if $inputAni == 'bg' {    
        background:transparent;
        + .ani{
            position: absolute;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            background: #ededed;
            opacity: 0;
            transition:0.5s;
            z-index: -1;
        }
        &:focus + .ani{
            transition:0.5s;
            opacity: 1;
        }
    }
    @else if $inputAni == 'bd' {
            transition:0.5s;
        &:focus{
            border: 1px solid #000;
            transition:0.5s;
        }
    }
    @else if $inputAni == 'hv' {
        transition:border-color .25s ease-in-out,
        box-shadow .1s ease-in-out,
        background-color .25s ease-in-out,
        color .25s ease-in-out;
        &:hover{
            border-color: #000;
        }
        &:focus{
            box-shadow: 0 0 4px 2px #e7e7e7;
        }
    }

}

/// form 에서 input 옆에 텍스트나 체크박스 추가시 위치설정
/// 
/// @group form
/// @author 채영
/// @param {string} $direc - bottom:아래,rught:위
@mixin memberinfo($direc) {
    @if $direc == 'right'{
        margin-left: 10px;
    }
    @else if $direc == 'bottom'{
        display: block;
        padding: 20px 0 10px 0;
    }
}

@mixin both($direc,$width:null){
    @if $direc == 'fl'{
        .fl{
            float: left;
            width: $width;
        }
    } 
    @if $direc == 'fr'{
        .fr{
            float:right;
            width: $width;
        }
    }
    @if $direc == 'center'{
        text-align: center;
    }
}

/// 변수($inputWidth)에 넓이값 지정하면 클래스가 적용되는 each 반복문
/// @group form
/// @author 채영
/// @example  <input type="password" class="width--450">
// $inputWidth:417,450,220,134;
// @each $property in $inputWidth {
//     .width--#{$property}{
//         width: $property + px + !important;
//     }
// }


